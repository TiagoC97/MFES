class Employee is subclass of User
types

instance variables

	private calendar: EmployeeCalendar;
	

operations
	/**
	 * Employee constructor
	 */
	public Employee: String_ * nat * Gender * String1 ==> Employee
 	Employee(newName, newAge, newGender, newNationality) == 
 	(
 		calendar:= new EmployeeCalendar();
 		User(newName, <Employee>, newAge, newGender, newNationality);
	);

 	
 	public addTask: Task ==> ()
 	addTask(task) == calendar.addTask(task);
	 
	-- GETTERS

 	/**
	 * Get client activity
	 */

	 public getActivity: bool ==> ()
		getActivity(showAllTasks) ==
		(
			dcl numClasses: nat := card classes;
			dcl numTrainingSessiosn: nat := card trainingSessions;
			dcl tasks: map Date to seq of Task := calendar.getTasks();
			dcl i: nat := 0;
			dcl t: Task;

			IO`println("********* CLIENT STATISTICS *********");
			IO`println("Number of gym classes: " ^ [numClasses]);
			IO`println("Number of training sessions: " ^ [numTrainingSessiosn]);
			
			if showAllTasks then
				(
					for all d in set dom tasks do
					(
						i := 0;
						IO`println(d);	

						while i < len tasks(d) do
						( 
							t := tasks(d)(i); 
							IO`println("	Task: " ^ [t.getDescription()] ^ [" started at "] ^ [t.getStartHour()] ^ [" and ended at "] ^ [t.getEndHour()]);
							i:= i + 1;
						);
						IO`println("");
					)		
				);
			
			IO`println("");
			IO`println("************************************");
		);
 	/**
	 * Get client calendar
	 * 
	 * @return calendar
	 */
 	public pure getCalendar: () ==> EmployeeCalendar
 	getCalendar() == return calendar
	post RESULT = calendar;
	 

	 
end Employee
